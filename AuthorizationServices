swagger: '2.0'
info:
  version: "0.1"
  title: Authentication Server
  description: |
    Authentication services to manage application and user access rights as part of projects.
    - **Users**

    To create and manage users in the system
    - **Applications**

    To create and manage applications and projects
    - **Session**

    To setup and tear down a session and to obtain information about a specific session
  contact:
    name: Invenso
    email: vincent.vanderlinden@invenso.com
    url: www.invenso.com
host: localhost
basePath: /rest
schemes:
  - http
  - https
consumes:
  - application/json
produces:
  - application/json

# ----------------------------------------------------------------
# Path definition
# ----------------------------------------------------------------
paths:

  # Users
  # ======================================================================

  /users/:
    get:
      summary: List users
      description: |
        > Retrieve all registered users ( individuals and groups )
        > Filter options
        - type of user : user/group
      operationId: list_all_users
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - name: Authorization
          in: header
          description: Token receieved via authentication. Format "Bearer access_token"
          required: true
          type: string
        - name: type
          in: query
          description: filter result on user type
          type: string
          required: false
      responses:
        200:
          description: OK
          schema:
            items:
              $ref: '#/definitions/User'
        400:
          description: Unable to process request.
          schema:
            $ref: '#/definitions/Error'

  # User
  # ======================================================================

  /users/{user_id}:
    get:
      summary: Get user
      description: retrieve user or group
      operationId: get_user
      parameters:
        - name: Authorization
          in: header
          description: Token receieved via authentication. Format "Bearer access_token"
          required: true
          type: string
        - name: user_id
          in: path
          description: user reference key
          type: string
          required: true
      responses:
        200:
          description: Ok
          schema:
            $ref: '#/definitions/User'
        400:
          description: Error
          schema:
            $ref: '#/definitions/Feedback'

    put:
      summary: update user
      operationId: update_user
      description: update user or group
      parameters:
        - name: Authorization
          in: header
          description: Token receieved via authentication. Format "Bearer access_token"
          required: true
          type: string
        - name: user_id
          in: path
          description: user reference
          type: string
          required: true
        - name: user
          in: body
          description: user details to update
          schema:
            $ref: "#/definitions/User"
      responses:
        200:
          description: Ok
          schema:
            $ref: '#/definitions/User'
        400:
          description: Error
          schema:
            $ref: '#/definitions/Feedback'

    delete:
      summary: delete user
      description: delete user or group
      operationId: delete_user
      parameters:
        - name: user_id
          in: path
          description: user reference
          type: string
          required: true
      responses:
        204:
          description: OK
        400:
          description: Error
          schema:
            $ref: '#/definitions/Feedback'


  # User - Password
  # ======================================================================

  /users/{user_id}/password:
    put:
      description: |
        > change user password. Only applicable for user type = user.
      operationId: set_user_password
      parameters:
        - name: Authorization
          in: header
          description: Token receieved via authentication. Format "Bearer access_token"
          required: true
          type: string
        - name: user_id
          in: path
          description: user refence, type must be user.
          type: string
          required: true
        - name: new_password
          in: body
          description: new password
          schema:
            type: string
      responses:
        204:
          description: Ok
          schema:
           $ref: '#/definitions/User'
        400:
          description: Error
          schema:
            $ref: '#/definitions/Feedback'


  /users/{user_id}/password/reset:
    put:
      description: |
        > Request password reset for given user. Only applicable for user type = user.
        > The server will contact the user with a link to allow to reset password.
      operationId: reset_password
      parameters:
        - name: Authorization
          in: header
          description: Token receieved via authentication. Format "Bearer access_token"
          required: true
          type: string
        - name: user_id
          in: path
          description: reference to the user
          type: string
          required: true
      responses:
        204:
          description: OK
        400:
          description: Unable to process request.
          schema:
            $ref: '#/definitions/Error'


  # User - Register
  # ======================================================================

  /users/register/{application_id}:
    post:
      summary: Register a new user/group.
      description: |
        > Register a new user/group
        > When application id is provided : Add authoziation scope to that application as well.
      operationId: register_user
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - name: application_id
          in: path
          description: application reference
          required: false
          type: string
        - name: user
          in: body
          required: true
          description: new user details.
          schema:
            $ref: '#/definitions/User'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/User'
        400:
          description: Unable to process request.
          schema:
            $ref: '#/definitions/Error'


  # User - Permissions
  # ======================================================================
  /users/{user_id}/permissions:
    get:
      summary: List user scope
      description: List all user/group permissions
      operationId: list_user_permisions
      parameters:
        - name: Authorization
          in: header
          description: Token receieved via authentication. Format "Bearer access_token"
          required: true
          type: string
        - name: user_id
          in: path
          description: user reference
          type: string
          required: true
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/Permission_list"
        400:
          description: Unable to process request.
          schema:
            $ref: '#/definitions/Error'

  /users/{user_id}/permissions/{application_id}:
    get:
      summary: Get user application scope
      description: |
        > Get user specific permissions for the given application
        > Application right are valid for all projects defined within. The act as global right.
      operationId: get_user_application_permisions
      parameters:
        - name: Authorization
          in: header
          description: Token receieved via authentication. Format "Bearer access_token"
          required: true
          type: string
        - name: user_id
          in: path
          description: user reference
          type: string
          required: true
        - name: application_id
          in: path
          description: application reference
          type: string
          required: true
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/Permission_list"
        400:
          description: Unable to process request.
          schema:
            $ref: '#/definitions/Error'

    put:
      summary: Set user application scope
      description: |
        > Set one or more user permissions for the application specified
      operationId: set_user_application_permisions
      parameters:
        - name: Authorization
          in: header
          description: Token receieved via authentication. Format "Bearer access_token"
          required: true
          type: string
        - name: user_id
          in: path
          description: user reference
          type: string
          required: true
        - name: application_id
          in: path
          description: application reference
          type: string
          required: true
        - name: permission_set
          in: body
          description: application permissions to grant
          schema:
            type: array
            items:
              $ref: "#/definitions/Authorization_key"
          required: true
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/Permission_list"
        400:
          description: Unable to process request.
          schema:
            $ref: '#/definitions/Error'

    delete:
      summary: remove user application scope
      description: remove one or more user permissions for the application specified
      operationId: delete_user_application_permisions
      parameters:
        - name: Authorization
          in: header
          description: Token receieved via authentication. Format "Bearer access_token"
          required: true
          type: string
        - name: user_id
          in: path
          description: user reference
          type: string
          required: true
        - name: application_id
          in: path
          description: application reference
          type: string
          required: true
        - name: permission_set
          in: body
          description: application permissions to revoke
          schema:
            type: array
            items:
              $ref: "#/definitions/Authorization_key"
          required: true
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/Permission_list"
        400:
          description: Unable to process request.
          schema:
            $ref: '#/definitions/Error'

  /users/{user_id}/permissions/{application_id}/project/{project_id}:
    get:
      summary: get user project scope
      description: |
        > Get user specific permissions for the application project specified
      operationId: list_user_project_permisions
      parameters:
        - name: Authorization
          in: header
          description: Token receieved via authentication. Format "Bearer access_token"
          required: true
          type: string
        - name: user_id
          in: path
          description: user reference
          type: string
          required: true
        - name: application_id
          in: path
          description: application reference
          type: string
          required: true
        - name: project_id
          in: path
          description: project reference
          type: string
          required: true
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/Permission_list"
        400:
          description: Unable to process request.
          schema:
            $ref: '#/definitions/Error'

    post:
      summary: add user project scope
      description: Add user specific permissions for the application project specified
      operationId: set_user_project_permisions
      parameters:
        - name: Authorization
          in: header
          description: Token receieved via authentication. Format "Bearer access_token"
          required: true
          type: string
        - name: user_id
          in: path
          description: user reference
          type: string
          required: true
        - name: application_id
          in: path
          description: application reference
          type: string
          required: true
        - name: project_id
          in: path
          description: project reference
          type: string
          required: true
        - name: permission_set
          in: body
          description: application permissions to grant
          schema:
            type: array
            items:
              $ref: "#/definitions/Authorization_key"
          required: true
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/Permission_list"
        400:
          description: Unable to process request.
          schema:
            $ref: '#/definitions/Error'

    delete:
      summary: revoke user project scope(s)
      description: Revoke user specific permissions for the application project specified
      operationId: delete_user_project_permisions
      parameters:
        - name: Authorization
          in: header
          description: Token receieved via authentication. Format "Bearer access_token"
          required: true
          type: string
        - name: user_id
          in: path
          description: user reference
          type: string
          required: true
        - name: application_id
          in: path
          description: application reference
          type: string
          required: true
        - name: project_id
          in: path
          description: project reference
          type: string
          required: true
        - name: permission_set
          in: body
          description: application permissions to revoke
          schema:
            type: array
            items:
              $ref: "#/definitions/Authorization_key"
          required: true
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/Permission_list"
        400:
          description: Unable to process request.
          schema:
            $ref: '#/definitions/Error'

  # Application
  # ======================================================================
  /application:
    get:
      summary: List applications
      description: |
        > list registered applications
      operationId: list_applications
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - name: Authorization
          in: header
          description: Token receieved via authentication. Format "Bearer access_token"
          required: true
          type: string
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Application'
        400:
          description: Unable to process request.
          schema:
            $ref: '#/definitions/Error'

    post:
      summary: Register application
      description: |
        > Register application
      operationId: register_application
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - name: Authorization
          in: header
          description: Token receieved via authentication. Format "Bearer access_token"
          required: true
          type: string
        - name: application
          in: body
          description: Application to register
          required: true
          schema:
            $ref: '#/definitions/Application'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Application'
        400:
          description: Unable to process request.
          schema:
            $ref: '#/definitions/Error'

  /application/{application_id}/:
    put:
      summary: Update application
      description: |
        > update application
      operationId: update_application
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - name: Authorization
          in: header
          description: Token receieved via authentication. Format "Bearer access_token"
          required: true
          type: string
        - name: application_id
          in: path
          description: application reference
          required: true
          type: string
        - name: application
          in: body
          description: Application details to update
          required: true
          schema:
            $ref: '#/definitions/Application'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Application'
        400:
          description: Unable to process request.
          schema:
            $ref: '#/definitions/Error'

    get:
      summary: Get application details
      description: |
        > get application details
      operationId: get_application
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - name: Authorization
          in: header
          description: Token receieved via authentication. Format "Bearer access_token"
          required: true
          type: string
        - name: application_id
          in: path
          description: application reference
          required: true
          type: string
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Application'
        400:
          description: Unable to process request.
          schema:
            $ref: '#/definitions/Error'

    delete:
      summary: Delete application
      description: |
        > Delete application
      operationId: delete_application
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - name: Authorization
          in: header
          description: Token receieved via authentication. Format "Bearer access_token"
          required: true
          type: string
        - name: application_id
          in: path
          description: application reference
          required: true
          type: string
      responses:
        204:
          description: Success
        400:
          description: Unable to process request.
          schema:
            $ref: '#/definitions/Error'

  # Application projects
  # ======================================================================

  /application/{application_id}/projects:
    get:
      summary: Retrieve application projects list
      description: |
        > Retrieve application project list
      operationId: list_application_projects
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - name: Authorization
          in: header
          description: Token receieved via authentication. Format "Bearer access_token"
          required: true
          type: string
        - name: application_id
          in: path
          description: application reference
          required: true
          type: string
      responses:
        200:
          description: OK
          schema:
            items:
              $ref: '#/definitions/Project'
        400:
          description: Unable to process request.
          schema:
            $ref: '#/definitions/Error'

  /application/{application_id}/projects/{project_id}:
    get:
      summary: Retrieve application project details
      description: |
        > Retrieve application project details
      operationId: list_application_project
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - name: Authorization
          in: header
          description: Token receieved via authentication. Format "Bearer access_token"
          required: true
          type: string
        - name: application_id
          in: path
          description: application reference
          required: true
          type: string
        - name: project_id
          in: path
          description: project reference
          required: true
          type: string
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Project'
        400:
          description: Unable to process request.
          schema:
            $ref: '#/definitions/Error'

  # Application authorization scope
  # ======================================================================

  /application/{application_id}/authorization:
    get:
      summary: Retrieve application authorization scope
      description: |
        > Retrieve application authorization scope
      operationId: get_application_authorization_scope
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - name: Authorization
          in: header
          description: Token receieved via authentication. Format "Bearer access_token"
          required: true
          type: string
        - name: application_id
          in: path
          description: reference id of the application
          required: true
          type: string
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Application'
        400:
          description: Unable to process request.
          schema:
            $ref: '#/definitions/Error'

      put:
          summary: Update application authorization scope
          description: |
            > Update application authorization scope
          operationId: set_application_authorization_scope
          produces:
            - application/json
          consumes:
            - application/json
          parameters:
            - name: Authorization
              in: header
              description: Token receieved via authentication. Format "Bearer access_token"
              required: true
              type: string
            - name: application_id
              in: path
              description: reference id of the application
              required: true
              type: string
            - name: application_scope
              in: body
              type: array
              schema:
                items:
                  $ref: '#/definitions/Authorization_key'
          responses:
            200:
              description: OK
              schema:
                type: array
                items:
                  $ref: '#/definitions/Application'
            400:
              description: Unable to process request.
              schema:
                $ref: '#/definitions/Error'

  # Special services
  # ======================================================================
  /application/{appicationId}/login:
    get:
      summary: create new connection
      description: |
        > Create new connection with basic authentication
      operationId: do_login
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - name: Authorization
          in: header
          description: Token receieved via authentication. Format "Basic base64(user:password)"
          required: true
          type: string
        - name: appicationId
          in: path
          description: user reference
          type: string
          required: true
        - name: project_id
          in: query
          description: project reference
          type: string
          required: true
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Application_token'
        400:
          description: Unable to process request.
          schema:
            $ref: '#/definitions/Error'

# Object definitions
# ----------------------------------------------------------------
definitions:

  Authorization_key:
    type: object
    required:
      - value
      - description
    properties:
      value:
        type: string
        title: key value
      description:
        type: string
        title: key description

  Application_token:
    type: object
    properties:
      token:
        type: string
        title: jwt token generated
      expiredAt:
        type: number
        title: token expiration date

  Application:
    type: object
    required:
      - name
    properties:
      id:
        type: string
        title: unique application reference
      name:
        type: string
        title: application name
      description:
        type: string
        title: description
    authorization_scope:
          items:
            $ref: "#/definitions/Authorization_key"
    project_list:
          items:
            $ref: "#/definitions/Project"


  Feedback:
    type: array
    items:
      type: object
      properties:
        status:
          type: string
        severity:
          type: string
          enum:
            - error
            - warning
            - info
        title:
          type: string

  Error:
    type: object
    properties:
      status:
        type: string
        title: error
      message:
        type: string

  Permission_list:
    type: object
    required:
      - application_id
      - Authorization_keyList
    properties:
      application_id:
        type: string
        title: application reference
      project_id:
        type: string
        title: project reference
      Authorization_keyList:
        type: array
        items:
          $ref: "#/definitions/Authorization_key"

  Project:
    type: object
    required:
      - name
    properties:
      id:
        type: string
        title: unique project reference
      role:
        type: string
        title: project role
        enum:
          - development
          - test
          - acceptance
          - production
      name:
        type: string
        title: project name
      description:
        type: string
        title: description

  User:
    type: object
    required:
    - email
    - full_name
    - type
    properties:
      id:
        title: unique user or user group reference
        type: string
        format: uuid
        example: d290f1ee-6c54-4b01-90e6-d701748f0851
      full_name:
        title: full name
        type: string
        format: string
        example: Vincent Van der Linden
      email:
        title: valid email address
        type: string
        format: email
        example: vincent.vanderlinden@invenso.com
      type:
        title: users are individuals or groups
        type: string
        enum:
          - user
          - group
        example: user


# Added by API Auto Mocking Plugin
host: virtserver.swaggerhub.com
basePath: /vvdl/AuthenticationServer/0.1
schemes:
 - https
